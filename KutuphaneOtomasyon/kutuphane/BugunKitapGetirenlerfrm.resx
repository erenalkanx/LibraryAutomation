<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA4AAAAvAAAAUAAAAE0AAAAoAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAOgAAAJYAAADiAAAA2gAAAIQAAAAtAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAB/AAAA4wAAAPoAAAD5AAAA0QAAAG0AAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAABSAAAAVQAAAFYAAABMAAAAKQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAD4AAABjAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAWAAAAFQAAABUAAAAVAAA
        AFUAAABZAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAYwAAAD4AAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAlAAAAPoAAAD+AAAA/gAAAP4AAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD+AAAA/gAAAP4AAAD6AAAAlAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABPAAAAtQAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAALUAAABPAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAABUAAAAswAAAPQAAAD/AAAAxAAA
        AF4AAABcAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAXAAAAF4AAADEAAAA/wAAAPQAAACzAAAAVAAA
        ABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAABaAAAA5gAA
        AP8AAACiAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAKIAAAD/AAAA5gAA
        AFoAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACMAAADdAAAA/wAAAKIAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAogAA
        AP8AAADdAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIgAAAN0AAAD/AAAAogAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAACiAAAA/wAAAN0AAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAiAAAA3QAAAP8AAACiAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAKIAAAD/AAAA3QAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIAAADdAAAA/wAAAKIAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAogAAAP8AAADdAAAAIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgAAAN0AAAD/AAAAogAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAACiAAAA/wAAAN0AAAAiAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAAAiAAAA3QAAAP8AAACiAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAKIAAAD/AAAA3QAAACIAAAAAAAAAAAAA
        AAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAATQAAAEwAAAAcAAAAAAAAACIAAADcAAAA/wAA
        AKMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAWAAAArAAAAP8AAADMAAAAIAAA
        AAAAAAAhAAAASwAAAEQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAADwAAACnAAAAsAAAAEoAAAAAAAAAIAAA
        AM8AAAD/AAAAqgAAABMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADAAAAC4AAAA/QAA
        ALkAAAAdAAAADAAAAFkAAACuAAAAmgAAADYAAAAAAAAAAAAAAAAAAAAAAAAATQAAANoAAAD4AAAAfgAA
        ABEAAAAcAAAAswAAAPoAAAC+AAAAOwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAVgAA
        AMsAAADwAAAAoAAAABkAAAAmAAAAkwAAAPYAAADMAAAARgAAAAAAAAAAAAAAAAAAAAAAAABBAAAAwQAA
        APUAAACaAAAALgAAABUAAACGAAAA4gAAAOEAAACEAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABkAAACgAAAA7gAAANUAAABsAAAAEQAAAEQAAACwAAAA8gAAAKsAAAA3AAAAAAAAAAAAAAAAAAAAAAAA
        ACwAAACRAAAA7gAAAMwAAABgAAAACgAAAEIAAADAAAAA/wAAAM4AAABgAAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAAcgAAANsAAAD/AAAAswAAACwAAAAHAAAAdQAAAOEAAADqAAAAeAAAACAAAAAAAAAAAAAA
        AAAAAAAAAAAAEQAAAFYAAADjAAAA9gAAAJYAAAAZAAAAEwAAAIUAAADnAAAA9QAAAL0AAAB1AAAARwAA
        ADwAAAA+AAAASwAAAIAAAADNAAAA9wAAANoAAABzAAAACgAAACQAAACpAAAA/wAAANsAAABEAAAACgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAMAAAAD+AAAAzAAAAFsAAAASAAAAOAAAAJYAAADrAAAA+gAA
        AO4AAADRAAAAtgAAALkAAADYAAAA8QAAAPYAAADlAAAAggAAACcAAAAYAAAAdAAAANgAAAD0AAAArQAA
        AB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAZgAAANEAAAD7AAAAwgAAADsAAAAOAAAALwAA
        AIEAAADaAAAA+AAAAPkAAAD0AAAA9QAAAPsAAADwAAAAwgAAAGoAAAAkAAAAEwAAAE0AAADRAAAA/wAA
        AMMAAABKAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAeAAAAkgAAAO0AAADzAAAArwAA
        AEsAAAAWAAAAJAAAAFAAAACZAAAA2wAAAP8AAAD/AAAA2QAAAJEAAABCAAAAGwAAABoAAABaAAAAvQAA
        APUAAADfAAAAfwAAABEAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAABFAAAAoQAA
        AOgAAADsAAAAcwAAABQAAAAAAAAAAAAAAEsAAACxAAAA/wAAAP8AAAClAAAAPwAAAAAAAAAAAAAAGgAA
        AH0AAADwAAAA4AAAAI0AAAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAA+AAAAnQAAALgAAABUAAAABwAAAAAAAAAAAAAAKAAAAIQAAADmAAAA5AAAAHIAAAAWAAAAAAAA
        AAAAAAAHAAAAVAAAALQAAACLAAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAoAAAAeAAAAKwAAABMAAAAAAAAAAAAAAAAAAAAEAAAAKAAAAFgAAABQAAAAIQAA
        AAIAAAAAAAAAAAAAAAAAAAASAAAAKAAAABcAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAEQAA
        AA8AAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////+B////Af///wD///+B//8AAAD/AAAA/wAAAP+AAAH/wP
        8D/+D/B//g/wf/4P8H/+D/B//g/wf+YP8GfCD+BDwgfgA8AH4APAB+ADwAPAA8AAAAPgAAAH4AAAB+AA
        AAfwGBgf+BgYP/w4HD//PD7///////////8=
</value>
  </data>
</root>