<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAANAAAAGwAAACEAAAAiAAAAIgAA
        ACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAA
        ACIAAAAiAAAAIgAAACAAAAAZAAAACgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAFgAAAFUAAACxAAAA1gAA
        AN4AAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAA
        AN0AAADdAAAA3QAAAN0AAADeAAAA0wAAAKYAAABGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAA9AAAAtQAA
        AO8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA5wAAAJ4AAAAyAAAAAAAAAAAAAAAAAAAAAAAA
        AFcAAADxAAAA/gAAAMQAAACfAAAAogAAAKIAAACiAAAAogAAAKIAAACiAAAAogAAAKIAAACiAAAAogAA
        AKIAAACiAAAAogAAAKIAAACiAAAAogAAAKIAAACiAAAAnwAAAMUAAAD7AAAA4gAAAFAAAAAAAAAAAAAA
        AAAAAAAAAAAAXQAAAP8AAAD/AAAAXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAAP8AAAD/AAAAXQAA
        AAAAAAAAAAAAAAAAAAAAAABdAAAA/wAAAP8AAABdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdAAAA/wAA
        AP8AAABdAAAAAAAAAAAAAAAAAAAAAAAAAF0AAAD+AAAA/wAAAMQAAACfAAAAogAAAKIAAACiAAAAogAA
        AKIAAACiAAAAogAAAKIAAACiAAAAogAAAKIAAACiAAAAogAAAKIAAACiAAAAogAAAKIAAACiAAAAnwAA
        AMQAAAD/AAAA/gAAAF0AAAAAAAAAAAAAAAAAAAAAAAAAXQAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAAXQAAAAAAAAAAAAAAAAAAAAAAAABdAAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAABdAAAAAAAAAAAAAAAAAAAAAAAAAF0AAAD+AAAA/wAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD/AAAA/gAAAF0AAAAAAAAAAAAAAAAAAAAAAAAAXQAA
        AP4AAAD/AAAAmAAAAFcAAABdAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAXQAAAF0AAABdAAAAXQAA
        AF0AAABdAAAAXQAAAF0AAABdAAAAXQAAAF0AAABXAAAAmAAAAP8AAAD+AAAAXQAAAAAAAAAAAAAAAAAA
        AAAAAABdAAAA/wAAAP8AAABdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdAAAA/wAAAP8AAABdAAAAAAAA
        AAAAAAAAAAAAAAAAAF0AAAD/AAAA/wAAAF0AAAAAAAAAAAAAAAAAAAAGAAAAEgAAABgAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABwAAABkAAAAQAAAABAAAAAAAAAAAAAAAAAAAAF0AAAD/AAAA/wAA
        AF0AAAAAAAAAAAAAAAAAAAAAAAAAXQAAAP8AAAD/AAAAXQAAAAAAAAAAAAAAAAAAACYAAAByAAAAnQAA
        ACgAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAA1AAAAogAAAGgAAAAaAAAAAAAAAAAAAAAAAAAAXQAA
        AP8AAAD/AAAAXQAAAAAAAAAAAAAAAAAAAAAAAABdAAAA/wAAAP8AAABdAAAAAAAAAAAAAAABAAAAYgAA
        AMcAAADjAAAAiAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAMgAAAJ0AAADoAAAAtAAAAE8AAAABAAAAAAAA
        AAAAAABdAAAA/wAAAP8AAABdAAAAAAAAAAAAAAAAAAAAAAAAAF0AAAD/AAAA/wAAAF0AAAAAAAAAAAAA
        AAEAAABUAAAAuwAAAPgAAADZAAAAZQAAABEAAAAAAAAAAAAAABsAAAB3AAAA6QAAAPYAAACmAAAAQgAA
        AAEAAAAAAAAAAAAAAF0AAAD/AAAA/wAAAF0AAAAAAAAAAAAAAAAAAAAAAAAAXQAAAP8AAAD/AAAAXQAA
        AAAAAAAAAAAAAAAAAAkAAABdAAAA2gAAAPoAAAC1AAAATwAAAAcAAAAKAAAAZAAAAMcAAAD2AAAAywAA
        AE0AAAAAAAAAAAAAAAAAAAAAAAAAXQAAAP8AAAD/AAAAXQAAAAAAAAAAAAAAAAAAAAAAAABdAAAA/wAA
        AP8AAABeAAAAAAAAAAEAAAABAAAAAAAAACQAAAB5AAAA6wAAAPwAAACjAAAAMQAAAEIAAACyAAAA/wAA
        AOQAAABjAAAAGAAAAAAAAAABAAAAAQAAAAAAAABeAAAA/wAAAP8AAABdAAAAAAAAAAAAAAAAAAAAAAAA
        AFQAAADqAAAA/AAAAMUAAACfAAAAogAAAKIAAACgAAAAqAAAAMMAAAD2AAAA/wAAANsAAAChAAAAsAAA
        AOQAAAD/AAAA8wAAALoAAACkAAAAoQAAAKIAAACiAAAAnwAAAMUAAAD6AAAA2QAAAEwAAAAAAAAAAAAA
        AAAAAAAAAAAANwAAAKYAAADjAAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+QAA
        AO8AAAD3AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+QAAANsAAACNAAAALAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAARAAAAJcAAADMAAAA3gAAAOEAAAD6AAAA/wAAAPgAAADrAAAA6wAA
        APgAAAD/AAAA/wAAAP8AAAD/AAAA+AAAAOsAAADrAAAA+AAAAP8AAAD2AAAA4QAAAN8AAADIAAAAjAAA
        ADYAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAJAAAAFwAAAB8AAAAdAAAAPwAAANsAAAD/AAAA0gAA
        AIMAAACDAAAA0gAAAP8AAAD/AAAA/wAAAP8AAADSAAAAgwAAAIMAAADTAAAA/QAAAMcAAAA7AAAAHQAA
        AB8AAAAWAAAABwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAAxQAA
        AP8AAADQAAAAfAAAAHwAAADPAAAA/wAAAP8AAAD/AAAA/wAAAM8AAAB8AAAAfAAAANAAAAD6AAAAuQAA
        AB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABcAAACXAAAA6AAAAOkAAAC6AAAAuwAAAOgAAADwAAAA0wAAANwAAAD2AAAA5wAAALoAAAC7AAAA6QAA
        AOgAAACXAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADAAAAFIAAAC8AAAA+AAAAPkAAAD4AAAA8wAAALwAAAByAAAAhAAAAMgAAAD1AAAA+AAA
        APYAAADxAAAAuAAAAFUAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAADwAAAGEAAACxAAAA1wAAAM8AAACaAAAATwAAABEAAAAUAAAAXAAA
        AKoAAADSAAAAwAAAAIYAAABBAAAADQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAADoAAABLAAAASAAAAC8AAAATAAAAAAAA
        AAAAAAAYAAAANwAAAEoAAABBAAAAJwAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////wAAAA8AAAAPAAAADwAAAA8P//8PD///DwAAAA8AA
        AAPAAAADwAAAA8AAAAPD///Dw4fBw8ODwcPDA8DDwwGAw8OAA8PCQAJDwAAAA8AAAAPAAAADwAAAA/4A
        AH/+AAB//gAAf/4AAH//gYH///////////8=
</value>
  </data>
</root>